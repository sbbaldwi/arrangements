{
  "swagger": "2.0",
  "info": {
    "description": "API for managing acapella arrangements and user accounts",
    "version": "1.0.0",
    "title": "Acapella Arrangements API"
  },
  "host": "brichristiansenarrangements.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/arrangements": {
      "get": {
        "summary": "Get all arrangements",
        "description": "Returns all acapella arrangements",
        "responses": {
          "200": {
            "description": "A list of arrangements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Arrangement"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/arrangements/upload": {
      "post": {
        "summary": "Upload a new arrangement",
        "description": "Creates a new acapella arrangement with uploaded sheet music and recording",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "composer",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "ensembleType",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "SSAA",
              "SATB",
              "TTBB"
            ]
          },
          {
            "name": "difficultyLevel",
            "in": "formData",
            "required": true,
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4
            ]
          },
          {
            "name": "minimumPurchase",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sheetMusic",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "recording",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Arrangement created"
          },
          "500": {
            "description": "Server error or validation error"
          }
        }
      }
    },
    "/arrangements/{id}": {
      "get": {
        "summary": "Get an arrangement by ID",
        "description": "Returns a single acapella arrangement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single arrangement",
            "schema": {
              "$ref": "#/definitions/Arrangement"
            }
          },
          "404": {
            "description": "Arrangement not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an arrangement by ID",
        "description": "Updates an existing acapella arrangement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Arrangement object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Arrangement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arrangement updated"
          },
          "404": {
            "description": "Arrangement not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an arrangement by ID",
        "description": "Deletes a single acapella arrangement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Arrangement deleted"
          },
          "404": {
            "description": "Arrangement not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "summary": "Create a new account",
        "description": "Creates a new user account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Account object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts/authenticate": {
      "post": {
        "summary": "Authenticate a user",
        "description": "Authenticates a user by email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and password of the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/accounts/{id}": {
      "delete": {
        "summary": "Delete an account by ID",
        "description": "Deletes a single user account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an account by ID",
        "description": "Updates an existing user account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Account object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account updated"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Arrangement": {
      "type": "object",
      "required": [
        "title",
        "composer",
        "ensembleType",
        "difficultyLevel",
        "minimumPurchase"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "composer": {
          "type": "string"
        },
        "ensembleType": {
          "type": "string"
        },
        "difficultyLevel": {
          "type": "integer",
          "format": "int32"
        },
        "minimumPurchase": {
          "type": "integer",
          "format": "int32"
        },
        "sheetMusic": {
          "type": "string",
          "description": "Path to the uploaded sheet music file"
        },
        "recording": {
          "type": "string",
          "description": "Path to the uploaded recording file"
        }
      }
    },
    "Account": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}